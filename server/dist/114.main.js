"use strict";exports.id=114,exports.ids=[114],exports.modules={114:(r,t,e)=>{e.r(t),e.d(t,{default:()=>l});var o=e(185),s=e.n(o),n=e(913),i=e(96),c=e.n(i);e(81),(async()=>{await s().connect(n.Z.mongodb.path)})().catch((r=>{throw console.log(r),new Error("error con mongoose")}));const a=new o.Schema({user:{type:String,required:!0},password:{type:String,required:!0}}),l=class extends class{constructor(r,t){this.encript=async r=>{try{const t=await c().genSalt(this.salt);return await c().hash(r,t)}catch(r){throw console.log(r),new Error("Error encrypting")}},this.compare=async(r,t)=>{try{return await c().compare(r,t)}catch(r){throw console.log(r),new Error("Error compare")}},this.register=async(r,t)=>{try{if(!r||!t||"string"!=typeof r||"string"!=typeof t)return{error:"invalid user"};await this.collection.findOne({user:r},(async(e,o)=>{if(e)throw e;if(o)return{error:"user exist"};if(!o){const e=await this.encript(t),o=new this.collection({user:r,password:e});return await o.save(),{ok:"ok"}}}))}catch(r){throw console.log(r),new Error("error in register")}},this.login=async(r,t)=>{try{const e=await this.collection.findOne({user:r});return e?e.user==r&&this.compare(t,await this.encript(t))?{ok:"Ok"}:{error:"invalid credentials"}:{error:"user invalid"}}catch(r){throw console.log(r),new Error("Error logging")}},this.exist=async r=>{try{return await this.collection.findOne({user:r})}catch(r){throw console.log(r),new Error("Error getting users")}},this.LocalStrategy=async(r,t,e)=>{await this.collection.findOne({user:r},(async(r,o)=>{if(r)throw r;if(!o)return e(null,!1);await c().compare(t,o.password,((r,t)=>{if(r)throw r;return e(null,!0===t&&o)}))}))},this.salt=Number(process.env.saltBcrypt),this.collection=s().model(r,t)}}{constructor(){super("users",a)}}}};